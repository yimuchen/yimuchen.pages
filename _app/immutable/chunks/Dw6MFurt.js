import{s as fs,n as K}from"./CywiF0zC.js";import{S as vs,i as bs,e as o,s as n,c as a,g as p,a as c,b as r,d as t,f as l}from"./Csr7VRhO.js";function Es(hs){let i,Q='<ol class="toc-level toc-level-1"><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#storing-the-plotted-objects-of-roofit">Storing the plotted objects of Roofit</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#getting-the-plotted-objects">Getting the plotted objects</a></li></ol></li></ol>',q,E,X=`If you have used <a href="https://root.cern.ch/" rel="nofollow">Root</a> and
<a href="https://root.cern.ch/roofit" rel="nofollow">RooFit</a>, you will notice that the two system uses
apparently different plotting interfaces. This poses some problems when you are
attempting to plot RooFit objects together with Root objects. In particular,
using <a href="https://root.cern.ch/doc/master/classTLegend.html" rel="nofollow"><code>TLegend</code></a> objects
alongside RooFit objects.`,H,F,Z='<a aria-hidden="true" tabindex="-1" href="#storing-the-plotted-objects-of-roofit"><span class="icon icon-link"></span></a>Storing the plotted objects of Roofit',R,m,$="When plotting with RooFit, we typically use something below:",M,d,ss=`<div class="code-block-header">Example RooFit plotting routing <span class="code-block-lang">[cpp]</span></div> <div class="code-block code-block-numbered numbered-start-0 code-copyable"><pre class="shiki monokai" style="background-color:#272822;color:#F8F8F2" tabindex="0"><code><span class="line" data-line="1"><span style="color:#F92672">#include</span><span style="color:#E6DB74"> &quot;RooFit.h&quot;</span></span>
<span class="line" data-line="2"><span style="color:#F92672">#include</span><span style="color:#E6DB74"> &quot;RooRealVar.h&quot;</span></span>
<span class="line" data-line="3"><span style="color:#F92672">#include</span><span style="color:#E6DB74"> &quot;RooDataSet.h&quot;</span></span>
<span class="line" data-line="4"><span style="color:#F92672">#include</span><span style="color:#E6DB74"> &quot;RooGaussian.h&quot;</span></span>
<span class="line" data-line="5"><span style="color:#F92672">#include</span><span style="color:#E6DB74"> &quot;TCanvas.h&quot;</span></span>
<span class="line" data-line="6"><span style="color:#F92672">#include</span><span style="color:#E6DB74"> &quot;RooPlot.h&quot;</span></span>
<span class="line" data-line="7"><span style="color:#F92672">#include</span><span style="color:#E6DB74"> &quot;TAxis.h&quot;</span></span>
<span class="line" data-line="8"><span style="color:#F8F8F2">using </span><span style="color:#66D9EF;font-style:italic">namespace</span><span> </span><span style="color:#A6E22E;text-decoration:underline">RooFit</span><span style="color:#F8F8F2"> ;</span></span>
<span class="line" data-line="9"></span>
<span class="line" data-line="10"><span style="color:#66D9EF;font-style:italic">void</span><span style="color:#A6E22E"> rf101_basics</span><span style="color:#F8F8F2">()</span></span>
<span class="line" data-line="11"><span style="color:#F8F8F2">{</span></span>
<span class="line" data-line="12"><span style="color:#F8F8F2">  RooRealVar </span><span style="color:#A6E22E">x</span><span style="color:#F8F8F2">(</span><span style="color:#E6DB74">&quot;x&quot;</span><span style="color:#F8F8F2">,</span><span style="color:#E6DB74">&quot;x&quot;</span><span style="color:#F8F8F2">,</span><span style="color:#F92672">-</span><span style="color:#AE81FF">10</span><span style="color:#F8F8F2">,</span><span style="color:#AE81FF">10</span><span style="color:#F8F8F2">) ;</span></span>
<span class="line" data-line="13"><span style="color:#F8F8F2">  RooRealVar </span><span style="color:#A6E22E">mean</span><span style="color:#F8F8F2">(</span><span style="color:#E6DB74">&quot;mean&quot;</span><span style="color:#F8F8F2">,</span><span style="color:#E6DB74">&quot;mean of gaussian&quot;</span><span style="color:#F8F8F2">,</span><span style="color:#AE81FF">1</span><span style="color:#F8F8F2">,</span><span style="color:#F92672">-</span><span style="color:#AE81FF">10</span><span style="color:#F8F8F2">,</span><span style="color:#AE81FF">10</span><span style="color:#F8F8F2">) ;</span></span>
<span class="line" data-line="14"><span style="color:#F8F8F2">  RooRealVar </span><span style="color:#A6E22E">sigma</span><span style="color:#F8F8F2">(</span><span style="color:#E6DB74">&quot;sigma&quot;</span><span style="color:#F8F8F2">,</span><span style="color:#E6DB74">&quot;width of gaussian&quot;</span><span style="color:#F8F8F2">,</span><span style="color:#AE81FF">1</span><span style="color:#F8F8F2">,</span><span style="color:#AE81FF">0.1</span><span style="color:#F8F8F2">,</span><span style="color:#AE81FF">10</span><span style="color:#F8F8F2">) ;</span></span>
<span class="line" data-line="15"><span style="color:#F8F8F2">  RooGaussian </span><span style="color:#A6E22E">gauss</span><span style="color:#F8F8F2">(</span><span style="color:#E6DB74">&quot;gauss&quot;</span><span style="color:#F8F8F2">,</span><span style="color:#E6DB74">&quot;gaussian PDF&quot;</span><span style="color:#F8F8F2">,x,mean,sigma) ;</span></span>
<span class="line" data-line="16"></span>
<span class="line" data-line="17"><span style="color:#F8F8F2">  RooPlot</span><span style="color:#F92672">*</span><span style="color:#F8F8F2"> xframe </span><span style="color:#F92672">=</span><span style="color:#F8F8F2"> x.</span><span style="color:#A6E22E">frame</span><span style="color:#F8F8F2">(</span><span style="color:#A6E22E">Title</span><span style="color:#F8F8F2">(</span><span style="color:#E6DB74">&quot;Gaussian p.d.f.&quot;</span><span style="color:#F8F8F2">)) ;</span></span>
<span class="line" data-line="18"><span style="color:#F8F8F2">  gauss.</span><span style="color:#A6E22E">plotOn</span><span style="color:#F8F8F2">(xframe) ;</span></span>
<span class="line" data-line="19"><span style="color:#F8F8F2">  sigma.</span><span style="color:#A6E22E">setVal</span><span style="color:#F8F8F2">(</span><span style="color:#AE81FF">3</span><span style="color:#F8F8F2">) ;</span></span>
<span class="line" data-line="20"><span style="color:#F8F8F2">  gauss.</span><span style="color:#A6E22E">plotOn</span><span style="color:#F8F8F2">(xframe,</span><span style="color:#A6E22E">LineColor</span><span style="color:#F8F8F2">(kRed)) ;</span></span>
<span class="line" data-line="21"><span style="color:#F8F8F2">}</span></span></code></pre></div>`,D,g,es=`Now we suppose we want to generate a
<a href="https://root.cern.ch/doc/master/classTLegend.html" rel="nofollow"><code>TLegend</code></a> object to legend
the objects that are being plotted. If you are familiar with <code>TLegend</code>, this is
done through the function:`,j,y,ts='<div class="code-block-header"><span class="code-block-lang">[cpp]</span></div> <div class="code-block "><pre class="shiki monokai" style="background-color:#272822;color:#F8F8F2" tabindex="0"><code><span class="line"><span style="color:#F8F8F2">tlegend_instance.</span><span style="color:#A6E22E">AddEntry</span><span style="color:#F8F8F2">( </span><span style="color:#F92672">&lt;</span><span style="color:#F8F8F2">tobject_pointer</span><span style="color:#F92672">&gt;</span><span style="color:#F8F8F2"> , </span><span style="color:#E6DB74">&quot;&lt;Description_in_legend&gt;&quot;</span><span style="color:#F8F8F2"> , </span><span style="color:#E6DB74">&quot;&lt;plot_settings&gt;&quot;</span><span style="color:#F8F8F2">)</span></span></code></pre></div>',C,x,ls=`The problem now is what are the <code>TObject</code> pointer that we need to pass over to
the <code>TLegend</code> method? It cannot be the <code>gauss</code> instance in the code above,
since it is used twice in the plotting function, so what is it?`,B,u,os='<a aria-hidden="true" tabindex="-1" href="#getting-the-plotted-objects"><span class="icon icon-link"></span></a>Getting the plotted objects',P,T,as=`It turns out when you call the
<a href="https://root.cern.ch/doc/master/classRooAbsData.html#a41ef49f1f48f06ae9e5fd197c820aeb1" rel="nofollow"><code>plotOn()</code></a>
method, it generates a
<a href="https://root.cern.ch/doc/master/classTGraph.html" rel="nofollow"><code>TGraph</code></a> object stored in
the <a href="https://root.cern.ch/doc/master/classRooPlot.html" rel="nofollow"><code>RooPlot</code></a> instance.
You could actually get a list of all these objects by the simple snippet:`,G,h,ns=`<div class="code-block-header"><span class="code-block-lang">[cpp]</span></div> <div class="code-block code-copyable"><pre class="shiki monokai" style="background-color:#272822;color:#F8F8F2" tabindex="0"><code><span class="line"><span style="color:#F92672">for</span><span style="color:#F8F8F2">( </span><span style="color:#66D9EF;font-style:italic">int</span><span style="color:#F8F8F2"> i </span><span style="color:#F92672">=</span><span style="color:#AE81FF"> 0</span><span style="color:#F8F8F2"> ; i </span><span style="color:#F92672">&lt;</span><span style="color:#F8F8F2"> xframe-&gt;</span><span style="color:#A6E22E">numItems</span><span style="color:#F8F8F2">() ; </span><span style="color:#F92672">++</span><span style="color:#F8F8F2">i ){</span></span>
<span class="line"><span style="color:#F8F8F2">    cout </span><span style="color:#F92672">&lt;&lt;</span><span style="color:#F8F8F2"> xframe-&gt;</span><span style="color:#A6E22E">getObject</span><span style="color:#F8F8F2">( i )-&gt;</span><span style="color:#A6E22E">GetName</span><span style="color:#F8F8F2">();</span></span>
<span class="line"><span style="color:#F8F8F2">}</span></span></code></pre></div>`,I,k,ps=`But there is a much better way of getting this thing, without having to guess
which name corresponds to which object you have just plotted on the <code>RooPlot</code>
object. By directly getting storing the object after you have called the
<code>plotOn()</code> method:`,O,f,cs=`<div class="code-block-header"><span class="code-block-lang">[cpp]</span></div> <div class="code-block code-copyable"><pre class="shiki monokai" style="background-color:#272822;color:#F8F8F2" tabindex="0"><code><span class="line"><span style="color:#F8F8F2">gauss.</span><span style="color:#A6E22E">plotOn</span><span style="color:#F8F8F2">(xframe);</span></span>
<span class="line"><span style="color:#F8F8F2">TGraph</span><span style="color:#F92672">*</span><span style="color:#F8F8F2"> gauss_graph </span><span style="color:#F92672">=</span><span style="color:#F8F8F2"> (TGraph</span><span style="color:#F92672">*</span><span style="color:#F8F8F2">)xframe-&gt;</span><span style="color:#A6E22E">getObject</span><span style="color:#F8F8F2">( xframe-&gt;</span><span style="color:#A6E22E">numItems</span><span style="color:#F8F8F2">() </span><span style="color:#F92672">-</span><span style="color:#AE81FF"> 1</span><span style="color:#F8F8F2"> );</span></span></code></pre></div>`,V,A,is=`There is another merit of using this method. You could manually define the plot
style using ROOT flavored methods rather than using stuffing it all in the
<code>plotOn()</code> methods call!`,S,v,rs=`<div class="code-block-header"><span class="code-block-lang">[cpp]</span></div> <div class="code-block code-copyable"><pre class="shiki monokai" style="background-color:#272822;color:#F8F8F2" tabindex="0"><code><span class="line"><span style="color:#F8F8F2">gauss_graph-&gt;</span><span style="color:#A6E22E">SetFillStyle</span><span style="color:#F8F8F2">(</span><span style="color:#AE81FF">3004</span><span style="color:#F8F8F2">);</span></span>
<span class="line"><span style="color:#F8F8F2">gauss-&gt;</span><span style="color:#A6E22E">SetLineColor</span><span style="color:#F8F8F2">( kGreen );</span></span></code></pre></div>`,N,L,Fs=`This gives you much more flexibility on the plots you are getting! Since not
all <a href="https://root.cern.ch/doc/master/classTGraphPainter.html" rel="nofollow">TGraphPainter</a>
are not accessible with the RooFit <code>plotOn</code> <a href="https://root.cern.ch/doc/master/classRooAbsPdf.html#ae19cd5285edf475b744819b72d3ca517" rel="nofollow">methods</a>.`,z,w,ds="So now we could use the <code>TLegend</code> object as expected with this method!",Y,b,ys=`<div class="code-block-header"><span class="code-block-lang">[cpp]</span></div> <div class="code-block code-copyable"><pre class="shiki monokai" style="background-color:#272822;color:#F8F8F2" tabindex="0"><code><span class="line"><span style="color:#A6E22E;text-decoration:underline">TLegend</span><span style="color:#A6E22E"> l</span><span style="color:#F8F8F2">( </span><span style="color:#AE81FF">0.6</span><span style="color:#F8F8F2">, </span><span style="color:#AE81FF">0.6</span><span style="color:#F8F8F2">, </span><span style="color:#AE81FF">0.9</span><span style="color:#F8F8F2">, </span><span style="color:#AE81FF">0.9</span><span style="color:#F8F8F2">);</span></span>
<span class="line"><span style="color:#F8F8F2">l.</span><span style="color:#A6E22E">AddEntry</span><span style="color:#F8F8F2">( gauss_graph , </span><span style="color:#E6DB74">&quot;My Description&quot;</span><span style="color:#F8F8F2"> , </span><span style="color:#E6DB74">&quot;fl&quot;</span><span style="color:#F8F8F2"> );</span></span>
<span class="line"><span style="color:#F8F8F2">l.</span><span style="color:#A6E22E">Draw</span><span style="color:#F8F8F2">();</span></span></code></pre></div>`,U,W,J,_,us="Hopefully this quick snippet has been useful!";return{c(){i=o("nav"),i.innerHTML=Q,q=n(),E=o("p"),E.innerHTML=X,H=n(),F=o("h1"),F.innerHTML=Z,R=n(),m=o("p"),m.textContent=$,M=n(),d=o("div"),d.innerHTML=ss,D=n(),g=o("p"),g.innerHTML=es,j=n(),y=o("div"),y.innerHTML=ts,C=n(),x=o("p"),x.innerHTML=ls,B=n(),u=o("h2"),u.innerHTML=os,P=n(),T=o("p"),T.innerHTML=as,G=n(),h=o("div"),h.innerHTML=ns,I=n(),k=o("p"),k.innerHTML=ps,O=n(),f=o("div"),f.innerHTML=cs,V=n(),A=o("p"),A.innerHTML=is,S=n(),v=o("div"),v.innerHTML=rs,N=n(),L=o("p"),L.innerHTML=Fs,z=n(),w=o("p"),w.innerHTML=ds,Y=n(),b=o("div"),b.innerHTML=ys,U=n(),W=o("hr"),J=n(),_=o("p"),_.textContent=us,this.h()},l(s){i=a(s,"NAV",{class:!0,"data-svelte-h":!0}),p(i)!=="svelte-1kx00zi"&&(i.innerHTML=Q),q=c(s),E=a(s,"P",{"data-svelte-h":!0}),p(E)!=="svelte-1jyrugk"&&(E.innerHTML=X),H=c(s),F=a(s,"H1",{id:!0,"data-svelte-h":!0}),p(F)!=="svelte-5ai2kf"&&(F.innerHTML=Z),R=c(s),m=a(s,"P",{"data-svelte-h":!0}),p(m)!=="svelte-lij5l3"&&(m.textContent=$),M=c(s),d=a(s,"DIV",{class:!0,"data-svelte-h":!0}),p(d)!=="svelte-1s1iwia"&&(d.innerHTML=ss),D=c(s),g=a(s,"P",{"data-svelte-h":!0}),p(g)!=="svelte-snmavz"&&(g.innerHTML=es),j=c(s),y=a(s,"DIV",{class:!0,"data-svelte-h":!0}),p(y)!=="svelte-1ltnuww"&&(y.innerHTML=ts),C=c(s),x=a(s,"P",{"data-svelte-h":!0}),p(x)!=="svelte-jnvcx5"&&(x.innerHTML=ls),B=c(s),u=a(s,"H2",{id:!0,"data-svelte-h":!0}),p(u)!=="svelte-1iosmx"&&(u.innerHTML=os),P=c(s),T=a(s,"P",{"data-svelte-h":!0}),p(T)!=="svelte-1lngsf6"&&(T.innerHTML=as),G=c(s),h=a(s,"DIV",{class:!0,"data-svelte-h":!0}),p(h)!=="svelte-2pi6ix"&&(h.innerHTML=ns),I=c(s),k=a(s,"P",{"data-svelte-h":!0}),p(k)!=="svelte-2cib10"&&(k.innerHTML=ps),O=c(s),f=a(s,"DIV",{class:!0,"data-svelte-h":!0}),p(f)!=="svelte-1y7t17r"&&(f.innerHTML=cs),V=c(s),A=a(s,"P",{"data-svelte-h":!0}),p(A)!=="svelte-1y33k50"&&(A.innerHTML=is),S=c(s),v=a(s,"DIV",{class:!0,"data-svelte-h":!0}),p(v)!=="svelte-b5dol2"&&(v.innerHTML=rs),N=c(s),L=a(s,"P",{"data-svelte-h":!0}),p(L)!=="svelte-1k3e3f5"&&(L.innerHTML=Fs),z=c(s),w=a(s,"P",{"data-svelte-h":!0}),p(w)!=="svelte-pxoxrs"&&(w.innerHTML=ds),Y=c(s),b=a(s,"DIV",{class:!0,"data-svelte-h":!0}),p(b)!=="svelte-1h3npri"&&(b.innerHTML=ys),U=c(s),W=a(s,"HR",{}),J=c(s),_=a(s,"P",{"data-svelte-h":!0}),p(_)!=="svelte-15w6jv3"&&(_.textContent=us),this.h()},h(){r(i,"class","toc"),r(F,"id","storing-the-plotted-objects-of-roofit"),r(d,"class","code-block-container"),r(y,"class","code-block-container"),r(u,"id","getting-the-plotted-objects"),r(h,"class","code-block-container"),r(f,"class","code-block-container"),r(v,"class","code-block-container"),r(b,"class","code-block-container")},m(s,e){t(s,i,e),t(s,q,e),t(s,E,e),t(s,H,e),t(s,F,e),t(s,R,e),t(s,m,e),t(s,M,e),t(s,d,e),t(s,D,e),t(s,g,e),t(s,j,e),t(s,y,e),t(s,C,e),t(s,x,e),t(s,B,e),t(s,u,e),t(s,P,e),t(s,T,e),t(s,G,e),t(s,h,e),t(s,I,e),t(s,k,e),t(s,O,e),t(s,f,e),t(s,V,e),t(s,A,e),t(s,S,e),t(s,v,e),t(s,N,e),t(s,L,e),t(s,z,e),t(s,w,e),t(s,Y,e),t(s,b,e),t(s,U,e),t(s,W,e),t(s,J,e),t(s,_,e)},p:K,i:K,o:K,d(s){s&&(l(i),l(q),l(E),l(H),l(F),l(R),l(m),l(M),l(d),l(D),l(g),l(j),l(y),l(C),l(x),l(B),l(u),l(P),l(T),l(G),l(h),l(I),l(k),l(O),l(f),l(V),l(A),l(S),l(v),l(N),l(L),l(z),l(w),l(Y),l(b),l(U),l(W),l(J),l(_))}}}const xs={layout:"post",title:"Using TLegend in with RooPlot",description:"Mixing the different plotting machanics of pure Root and RooFit",tags:["root","roofit","plotting"],banner:"code_head_1.png"};class Ts extends vs{constructor(i){super(),bs(this,i,null,Es,fs,{})}}export{Ts as default,xs as metadata};
